/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CustomInput {
        /**
          * Handle the validatity constrain of input field
         */
        "isValid": boolean;
        /**
          * Define the type of Input Field e.g "url"
         */
        "label": string;
        /**
          * Define the size of input
         */
        "size": number;
        /**
          * Define the type of Input Field e.g "url"
         */
        "type": string;
        /**
          * Define the pattern to validate the input field
         */
        "validationPattern": string;
    }
}
declare global {
    interface HTMLCustomInputElement extends Components.CustomInput, HTMLStencilElement {
    }
    var HTMLCustomInputElement: {
        prototype: HTMLCustomInputElement;
        new (): HTMLCustomInputElement;
    };
    interface HTMLElementTagNameMap {
        "custom-input": HTMLCustomInputElement;
    }
}
declare namespace LocalJSX {
    interface CustomInput {
        /**
          * Handle the validatity constrain of input field
         */
        "isValid"?: boolean;
        /**
          * Define the type of Input Field e.g "url"
         */
        "label"?: string;
        /**
          * This is the event for on user input
         */
        "onOnUserInput"?: (event: CustomEvent<any>) => void;
        /**
          * Define the size of input
         */
        "size"?: number;
        /**
          * Define the type of Input Field e.g "url"
         */
        "type"?: string;
        /**
          * Define the pattern to validate the input field
         */
        "validationPattern"?: string;
    }
    interface IntrinsicElements {
        "custom-input": CustomInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "custom-input": LocalJSX.CustomInput & JSXBase.HTMLAttributes<HTMLCustomInputElement>;
        }
    }
}
